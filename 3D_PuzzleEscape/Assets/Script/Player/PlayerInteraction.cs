using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerInteraction : MonoBehaviour
{
    private PlayerInput playerInput;

    //아이템 스크립트를 만들면 플레이어가 현재 들고 있는 아이템값을 가짐.
    //private Item InteractionItem;
    [SerializeField] private float f_InteractionRayDistance;
    private Ray InteractionRay;
    private RaycastHit hit;
    private int InteractableLayer;

    private bool b_OnInteraction;

    private void Awake()
    {
        playerInput = GetComponent<PlayerInput>();
    }

    void Start()
    {
        InteractableLayer = 1 << LayerMask.NameToLayer("Interactable");
        b_OnInteraction = true;
    }

    void Update()
    {
        if (b_OnInteraction)
        {
            InteractionRay = Camera.main.ScreenPointToRay(new Vector3(Screen.width * 0.5f, Screen.height * 0.5f, f_InteractionRayDistance));

            if (Physics.Raycast(InteractionRay, out hit, f_InteractionRayDistance, InteractableLayer))
            {
                //UIManager를 만들고 상호작용키 가이드UI를 만들경우 추가
                //UIManager.instance.OnInteractionUI();
                
                if(playerInput.InteractionKey)
                {
                    InteractionObject interObj = hit.collider.GetComponent<InteractionObject>();
                    if(interObj)
                    {
                        if (interObj.NeedItemCheck() != null && InventoryManager.instance.SelectedItem != null)
                        {
                            if(InventoryManager.instance.SelectedItem.data.name == interObj.NeedItemCheck().Data.name)
                            {
                                InventoryManager.instance.UseItem();
                                interObj.Interaction();
                            }
                            else
                            {
                                //메세지 UI를 Active시켜서 "이 아이템은 여기에 사용할 수 없다."라고 띄워주기.
                            }
                        }
                        else if (interObj.NeedItemCheck() == null)
                        {
                            interObj.Interaction();
                        }
                        
                    }
                }
            }
        }
    }

    private void OnDrawGizmos()
    {
        Gizmos.DrawRay(InteractionRay);
    }
}
